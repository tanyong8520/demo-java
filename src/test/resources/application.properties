spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/alert?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true\
  &zeroDateTimeBehavior=convertToNull&autoReconnect=true&maxReconnects=99
spring.datasource.username=root
spring.datasource.password=root

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#dataSource Pool configuration
# 初始化大小，最小，最大
spring.datasource.initialSize=5  
spring.datasource.minIdle=5  
spring.datasource.maxActive=20  
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000  
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000  
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000  
# 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
spring.datasource.validationQuery=SELECT 'x'  
spring.datasource.testWhileIdle=true  
spring.datasource.testOnBorrow=false  
spring.datasource.testOnReturn=false  
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true  
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20  
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j  
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true  

#对象池
generic.pool.maxIdle=30
generic.pool.maxWaitMillis=60000
generic.pool.minIdle=10

#kafka consumer config
spring.kafka.consumer.zookeeper.connect=192.168.0.191:2181
spring.kafka.consumer.servers=192.168.0.191:9092
spring.kafka.consumer.enable.auto.commit=true
spring.kafka.consumer.session.timeout=6000
spring.kafka.consumer.auto.commit.interval=100
spring.kafka.consumer.auto.offset.reset=latest
spring.kafka.consumer.group.id=tany
spring.kafka.consumer.concurrency=10

kafka.data.topic.engine=test

#redis config
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.database=10
spring.redis.timeout=0
spring.redis.pool.max.active=8
spring.redis.pool.max.wait=-1
spring.redis.pool.max.idle=500
spring.redis.pool.min.idle=0

#shiro config
spring.redis.shiro.host=127.0.0.1
spring.redis.shiro.port=6379
spring.redis.shiro.timeout=0
spring.redis.shiro.password=
